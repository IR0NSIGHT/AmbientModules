/**
    wrapper function for artillery volley
    call local to zeus computer, for zeus controlling with visual outline etc
*/
params["_output", "_args"];
// parse parameters for artillery function
_output params [
    "_shapetype",   //"circle" or "rect"
    "_radius",  //radius of circle
    "_rectDims",    //[x,y] dimensions of rectangle
    "_duration",    //duration in seconds
    "_impactoffset",    //seconds between impacts
    "_projectile",  //[classname, isFlare]
    "_delay",   //delay to start
    "_movingDist",  //rolling barrage
    "_initialDir"   //moving direction of rolling barrage
];
_args params ["_pos"];
_projectile params ["_projClass", "_isFlare"];

diag_log["artillery initializer called with:",_output,_args];


_spawnHeight = 300;
_speed = 200;
if (_isFlare) then {
    _spawnHeight = 100;
    _speed = 0.5;
};

// --

// spawn anchor object
_anchor = createvehicle ["Sign_Pointer_Blue_F", _pos];
// anchor is global object, but local to zeus
_anchor hideObjectglobal true;
_anchor setPosASL _pos;
_anchor setDir _initialDir;
{
    [_x, [[_anchor], true]] remoteExec ["addcuratorEditableObjects", 2, false];
} forEach allCurators;

// initialize shape
_shape = [_shapetype, _anchor, []];
if (_shapetype isEqualto "circle") then {
    _shape set [2, [_radius]];
} else {
    _shape set [2, [[_rectDims#0, 0, 0], [0, _rectDims#1, 0]]];
};
_validShape = [_shape] call FUNC(isShape);
if (!_validShape) exitwith {
    ["invalid shape generated by artillery volley dialog"] call BIS_Fnc_error;
};
_outlineObjs = [_anchor, _shape, 25, true, true] call IRN_fnc_outlineShape;

// align anchor to up vector
[_anchor] spawn {
    params ["_anchor"];
    while {!isNull _anchor} do {
        _anchor setvectorUp [0, 0, 1];
        sleep 0.2;
    };
};

// call artillery volley function on server
_args = [_shape, _duration, _impactoffset, _projClass, _speed, _spawnHeight];
[_delay, _args] spawn {
    params ["_delay", "_args"];
    sleep _delay;
    diag_log ["calling mortar fire with args:", _args];
    // _args execVM "fn_artilleryVolley.sqf";
    _args remoteExec ["IRN_fnc_artilleryVolley", 2];
};

// move anchor+shape for rolling barrage
[_delay, _duration, _anchor, _outlineObjs, _movingDist] spawn {
    params ["_delay", "_duration", "_anchor", "_objs", "_movingDist"];
    sleep _delay;
    for "_i" from 0 to _duration do {
        _step = (vectorDir _anchor) vectorMultiply (_movingDist/_duration);
        _anchor setPosWorld (getPosWorld _anchor vectorAdd _step);
        sleep 1;
    };
    deletevehicle _anchor;
};